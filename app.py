import streamlit as st
import cv2
import numpy as np
from pyzbar.pyzbar import decode
import gspread
from google.oauth2.service_account import Credentials
import json


# --- Configuration de Google Sheets ---
scopes = [
    "https://www.googleapis.com/auth/spreadsheets",
    "https://www.googleapis.com/auth/drive",
]

# Charger les identifiants depuis st.secrets au lieu d'un fichier
credentials = {
    "type": st.secrets["gcp_service_account"]["type"],
    "project_id": st.secrets["gcp_service_account"]["project_id"],
    "private_key_id": st.secrets["gcp_service_account"]["private_key_id"],
    "private_key": st.secrets["gcp_service_account"]["private_key"],
    "client_email": st.secrets["gcp_service_account"]["client_email"],
    "client_id": st.secrets["gcp_service_account"]["client_id"],
    "auth_uri": st.secrets["gcp_service_account"]["auth_uri"],
    "token_uri": st.secrets["gcp_service_account"]["token_uri"],
    "auth_provider_x509_cert_url": st.secrets["gcp_service_account"]["auth_provider_x509_cert_url"],
    "client_x509_cert_url": st.secrets["gcp_service_account"]["client_x509_cert_url"]
}

creds = Credentials.from_service_account_info(credentials, scopes=scopes)
client = gspread.authorize(creds)
sheet = client.open("1").sheet1


# --- Fonction d'authentification ---
def verifier_identifiants(utilisateur, mot_de_passe):
    """V√©rifie si les identifiants sont corrects."""
    utilisateurs = st.secrets["credentials"]
    return utilisateurs.get(utilisateur) == mot_de_passe


# --- Interface de connexion ---
if "authentifie" not in st.session_state:
    st.session_state.authentifie = False

if not st.session_state.authentifie:
    st.title("üîë Connexion requise")

    utilisateur = st.text_input("üë§ Identifiant")
    mot_de_passe = st.text_input("üîí Mot de passe", type="password")
    connexion_bouton = st.button("Se connecter")

    if connexion_bouton:
        if verifier_identifiants(utilisateur, mot_de_passe):
            st.session_state.authentifie = True
            st.success("‚úÖ Connexion r√©ussie !")
            st.rerun()  # Recharge la page apr√®s connexion
        else:
            st.error("‚ùå Identifiants incorrects. Veuillez r√©essayer.")

    st.stop()  # Arr√™te l'ex√©cution ici si non authentifi√©

# --- Interface principale apr√®s connexion ---
st.title("üìö Gestion des polys - CREM")

# Bouton de d√©connexion
if st.button("üö™ Se d√©connecter"):
    st.session_state.authentifie = False
    (st.rerun())

# Capture du code-barres
st.subheader("üì∑ Scanner un code-barres")
img_file_buffer = st.camera_input("Scannez le code-barres pour r√©cup√©rer un num√©ro d'adh√©rent")

if "numero_adherent" not in st.session_state:
    st.session_state.numero_adherent = None

# D√©tection du code-barres
if img_file_buffer is not None:
    file_bytes = np.asarray(bytearray(img_file_buffer.read()), dtype=np.uint8)
    image = cv2.imdecode(file_bytes, 1)

    decoded_objs = decode(image)
    if decoded_objs:
        st.session_state.numero_adherent = decoded_objs[0].data.decode("utf-8")
        st.success(f"‚úÖ Num√©ro d'adh√©rent d√©tect√© : {st.session_state.numero_adherent}")
    else:
        st.error("‚ùå Code-barres non reconnu. Veuillez r√©essayer.")

# R√©cup√©ration des cours depuis Google Sheets
st.subheader("üìå S√©lectionner un cours")

try:
    liste_cours = sheet.row_values(1)  # R√©cup√®re les intitul√©s de la premi√®re ligne
    if not liste_cours:
        st.error("‚ö†Ô∏è Aucun cours trouv√© dans la premi√®re ligne du Google Sheets.")
except Exception as e:
    st.error(f"‚ùå Erreur lors de la r√©cup√©ration des cours : {e}")
    liste_cours = []

cours_selectionne = st.selectbox("üìñ Choisissez un cours :", liste_cours)

# Bouton de mise √† jour
if st.button("üì§ Enregistrer la r√©cup√©ration du cours"):
    if st.session_state.numero_adherent is None:
        st.error("‚ùå Aucun num√©ro d'adh√©rent d√©tect√©. Veuillez scanner un code-barres.")
    else:
        try:
            # Recherche du num√©ro d'adh√©rent dans la feuille
            cellule = sheet.find(st.session_state.numero_adherent)
        except Exception as e:
            st.error(f"‚ùå Erreur lors de la recherche de l'adh√©rent : {e}")
            cellule = None

        if cellule:
            ligne = cellule.row
            if cours_selectionne in liste_cours:
                colonne = liste_cours.index(cours_selectionne) + 1  # Index bas√© sur 1
                try:
                    # V√©rifier si l'√©tudiant a d√©j√† r√©cup√©r√© le poly
                    current_value = sheet.cell(ligne, colonne).value

                    # Si la cellule contient d√©j√† une valeur ‚â• 1
                    if current_value and str(current_value).strip() and int(float(current_value)) >= 1:
                        st.error("‚ùå Cet √©tudiant a d√©j√† r√©cup√©r√© ce poly.")
                    else:
                        # Sinon, mettre √† jour la cellule
                        sheet.update_cell(ligne, colonne, 1)
                        st.success("‚úÖ Mise √† jour r√©ussie dans Google Sheets !")
                except Exception as e:
                    st.error(f"‚ùå Erreur lors de la mise √† jour : {e}")
            else:
                st.error("‚ö†Ô∏è Le cours s√©lectionn√© n'existe pas dans la feuille.")
        else:
            st.error("‚ùå Num√©ro d'adh√©rent non trouv√© dans la base de donn√©es.")
